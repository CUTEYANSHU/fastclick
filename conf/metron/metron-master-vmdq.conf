/**
 * Metron agent's master process.
 *
 * NICs are in VMDq mode, waiting for
 * tagged packets to be distributed
 * across their queues.
 * Slave metron agents will start on
 * different cores upon a command
 * from the controller.
 */

/* Configuration arguments */
define(
	$agentId     "metron:nfv:000001",
	$agentIp      127.0.0.1,
	$agentPort    80,
	$discoverIp   127.0.0.1,
	$discoverPort 8181,
	$discoverPass yourSecret
);

/* Instantiate the http server to access metron handlers */
http :: HTTPServer(PORT 80);

/* Metron master */
metron :: Metron(
	ID $agentId,                     /* Agent ID */
	NIC fd0, NIC fd1,                /* NICs to use */
	AGENT_IP $agentIp,               /* Own IP address */
	AGENT_PORT $agentPort,           /* Own HTTP port  */
	DISCOVER_IP $discoverIp,         /* Controller's IP address */
	DISCOVER_PORT $discoverPort,     /* Controller's port */
	DISCOVER_PASSWORD $discoverPass, /* Password to access ONOS' REST API */
);

/* NICs are configured with VMDq */
fd0 :: FromDPDKDevice(0, ACTIVE false, N_QUEUES 32) -> Idle -> ToDPDKDevice(0, N_QUEUES 32);
fd1 :: FromDPDKDevice(1, ACTIVE false, N_QUEUES 32) -> Idle -> ToDPDKDevice(1, N_QUEUES 32);
